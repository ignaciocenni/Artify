generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "postgresql"
  url               = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl         = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
  shadowDatabaseUrl = env("POSTGRES_URL_NON_POOLING") // used for migrations
}

model User {
  id         String    @id @default(uuid())
  name       String
  lastName   String
  email      String    @unique
  password   String
  image      String    @default("https://cdn.pixabay.com/photo/2016/08/08/09/17/avatar-1577909_1280.png")
  aboutMe    String    @default("")
  province   Province  @relation(fields: [provinceId], references: [id])
  products   Product[]
  interests  String[]  @default([])
  provinceId Int
  rol        Rol       @default(USER)
}

model Province {
  id    Int    @id @default(autoincrement())
  name  String @unique
  users User[]
}

model Product {
  id          Int      @id @default(autoincrement())
  name        String
  description String
  price       Float
  stock       Int
  image       String
  user        User     @relation(fields: [userId], references: [id]) // Relación con el modelo User
  userId      String // Campo para la relación con el modelo User
  reviews     Review[] // Relación con el modelo Review
  categoryId  Int // Campo para la relación con el modelo Category
  category    Category @relation(fields: [categoryId], references: [id]) // Relación con el modelo Category
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Review {
  id        Int      @id @default(autoincrement())
  comment   String
  rating    Int
  createdAt DateTime @default(now())
  product   Product  @relation(fields: [productId], references: [id], onDelete: Cascade)
  productId Int
}

model Category {
  id          Int       @id @default(autoincrement())
  name        String
  description String
  products    Product[]
}

enum Rol {
  ADMIN
  USER
}
